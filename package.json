{
  "name": "boltz-backend",
  "version": "3.1.1",
  "description": "Backend of Boltz",
  "main": "dist/lib/Boltz.js",
  "scripts": {
    "postinstall": "npm run precompile",
    "proto": "cross-os proto",
    "precompile": "node parseGitCommit.js",
    "compile": "tsc && cross-os postcompile",
    "compile:watch": "tsc -w",
    "start": "node bin/boltzd",
    "dev": "npm run compile && npm run start",
    "lint": "eslint --max-warnings 0 --ext .ts .",
    "lint:fix": "eslint --fix --ext .ts .",
    "docker:regtest": "./docker/regtest/startRegtest.sh",
    "docker:regtest:mine": "docker exec -it regtest bitcoin-cli -regtest -generate 1",
    "docker:regtest:fund:old": "lnclibtc2 newaddress p2wkh | jq '.address' | xargs | ./dockercmd.sh ",
    "docker:regtest:fund": "address=$(docker exec -it regtest lncli --rpcserver=127.0.0.1:10011 --tlscertpath=/root/.lnd-btc2/tls.cert --macaroonpath=/root/.lnd-btc2/data/chain/bitcoin/regtest/admin.macaroon newaddress p2wkh | jq '.address' | tr -d '\"') && docker exec -it regtest lncli --rpcserver=127.0.0.1:10009 --tlscertpath=/root/.lnd-btc/tls.cert --macaroonpath=/root/.lnd-btc/data/chain/bitcoin/regtest/admin.macaroon sendcoins $address 100000000 && docker exec -it regtest bitcoin-cli -regtest -generate 1",
    "docker:geth": "docker run -d --name geth -p 8545:8545 -p 8546:8546 boltz/geth:1.10.3",
    "docker:geth:deploy": "mkdir -p contracts && cp -R node_modules/boltz-core/hardhat.config.ts node_modules/boltz-core/scripts node_modules/boltz-core/artifacts contracts && cd contracts && hardhat deploy --network localhost",
    "docker:geth:fund": "./bin/boltz-ethereum send 1000000000000 && ./bin/boltz-ethereum send 1000000000000 --token",
    "docker:start": "npm run docker:regtest && npm run docker:geth && npm run docker:geth:deploy && npm run docker:geth:fund",
    "docker:stop": "docker kill regtest && docker rm regtest && docker kill geth && docker rm geth",
    "stacks:mocknet:dontuse": "npm i -g typescript @stacks/cli @blockstack/clarity-cli && docker/stacks/macos-x64/stacks-node start --config=docker/stacks/mocknet.toml",
    "stacks:mocknet:old": "docker run -p 3999:3999 -d blockstack/stacks-blockchain-api-standalone mocknet",
    "stacks:mocknet": "docker run -p 3999:3999 -d -e STACKS_NETWORK=mocknet hirosystems/stacks-blockchain-api-standalone:develop",
    "stacks:mocknet:microblock": "clarinet integrate",
    "stacks:mocknet:microblock:old": "cd docker/stacks && ./start.sh",
    "stacks:mocknet:microblock:old:stop": "docker stop stacks-blockchain stacks-blockchain-api postgres && sudo rm -rf docker/stacks/persistent-data docker/stacks/bns",
    "stacks:deploy": "npm i -g typescript @stacks/cli && stx deploy_contract ./contracts/stxswap_v10.clar stxswap_v10 10000 0 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/sip-010-trait.clar sip-010-trait 10000 1 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/usda-token.clar usda-token 10000 2 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/sip10swap_v3.clar sip10swap_v3 10000 3 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/nft-trait.clar nft-trait 10000 4 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/nft.clar nft 10000 5 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/trustless-rewards.clar trustless-rewards 10000 6 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999 && stx deploy_contract ./contracts/triggerswap_v6.clar triggerswap-v6 10000 7 'f4ab2357a4d008b4d54f3d26e8e72eef72957da2bb8f51445176d733f65a7ea501' -t -I http://localhost:3999",
    "stacks:fund:old": "curl -X POST http://localhost:3999/extended/v1/faucets/stx?address=ST30VXWG00R13WK8RDXBSTHXNWGNKCAQTRYEMA9FK",
    "stacks:fund:old:signer": "curl -X POST http://localhost:3999/extended/v1/faucets/stx?address=$SIGNER",
    "stacks:fund": "stx send_tokens ST30VXWG00R13WK8RDXBSTHXNWGNKCAQTRYEMA9FK 500000000 10000 0 de433bdfa14ec43aa1098d5be594c8ffb20a31485ff9de2923b2689471c401b801 -t -I http://localhost:3999",
    "stacks:fund:signer": "stx send_tokens $SIGNER 500000000 10000 $NONCE de433bdfa14ec43aa1098d5be594c8ffb20a31485ff9de2923b2689471c401b801 -t -I http://localhost:3999",
    "stacks:testnet": "docker run -d --name stacks-blockchain -v /root/stacks-node/persistent-data/stacks-blockchain/testnet:/root/stacks-node/data -p 20443:20443 -p 20444:20444 blockstack/stacks-blockchain /bin/stacks-node testnet",
    "test:clarinet:coverage": "clarinet test --coverage && genhtml coverage.lcov -o coverage",
    "test": "npm run test:unit && npm run docker:start && npm run test:int && npm run docker:stop",
    "test:nodocker": "npm run test:unit && npm run test:int",
    "test:unit": "jest test/unit",
    "test:unit:coverage": "jest test/unit --coverage --detectOpenHandles",
    "test:int": "jest test/integration --runInBand",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
    "prepublishOnly": "npm run compile && rm -f dist/package.json",
    "python:install": "pip install -r tools/requirements.txt",
    "python:lint": "pylint tools/*.py docker/*.py"
  },
  "bin": {
    "boltzd": "./bin/boltzd",
    "boltz-cli": "./bin/boltz-cli"
  },
  "cross-os": {
    "postcompile": {
      "linux": "rsync -am --include '*/' --include '*.js*' --exclude '*' lib/proto/ dist/lib/proto",
      "darwin": "rsync -am --include '*/' --include '*.js*' --exclude '*' lib/proto/ dist/lib/proto"
    },
    "proto": {
      "linux": "./node_modules/grpc-tools/bin/protoc --js_out='import_style=commonjs,binary:lib/proto' --ts_out='lib/proto' --grpc_out='lib/proto' --plugin='protoc-gen-grpc=node_modules/.bin/grpc_tools_node_protoc_plugin' --plugin='protoc-gen-ts=node_modules/grpc_tools_node_protoc_ts/bin/protoc-gen-ts' -I='proto' proto/*.proto proto/**/*.proto"
    }
  },
  "license": "AGPL-3.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BoltzExchange/boltz-backend"
  },
  "files": [
    "bin",
    "LICENSE",
    "README.md",
    "dist/**/!(tsconfig.tsbuildinfo)"
  ],
  "engines": {
    "node": ">=11.0.0"
  },
  "dependencies": {
    "@boltz/bolt11": "^1.2.7",
    "@google-cloud/storage": "^5.8.5",
    "@iarna/toml": "^2.2.5",
    "@mempool/mempool.js": "^2.3.0-dev1",
    "@pseudozach/okex-node": "0.0.52",
    "@stacks/keychain": "^2.0.1",
    "@stacks/network": "^3.0.0",
    "@stacks/rpc-client": "^0.8.18",
    "@stacks/transactions": "^3.1.0",
    "async-lock": "^1.3.0",
    "axios": "^0.21.1",
    "bip32": "^2.0.6",
    "bip39": "^3.0.4",
    "bitcoinjs-lib": "^5.2.0",
    "boltz-core": "^0.4.1",
    "cors": "^2.8.5",
    "cross-os": "^1.4.0",
    "discord.js": "^12.5.3",
    "diskusage": "^1.1.3",
    "ethers": "~5.3.0",
    "express": "^4.17.1",
    "google-protobuf": "^3.17.1",
    "grpc": "1.24.6",
    "node-forge": "^0.10.0",
    "node-schedule": "^2.0.0",
    "otplib": "^12.0.1",
    "sequelize": "^6.6.2",
    "socket.io-client": "^4.3.2",
    "sqlite3": "^5.0.2",
    "tor-axios": "^1.0.9",
    "winston": "^3.3.3",
    "ws": "^7.4.6",
    "yargs": "^17.0.1",
    "zeromq": "^5.2.8"
  },
  "devDependencies": {
    "@boltz/bitcoin-ops": "^2.0.0",
    "@stacks/blockchain-api-client": "^2.1.1",
    "@types/async-lock": "^1.1.2",
    "@types/cors": "^2.8.10",
    "@types/express": "^4.17.12",
    "@types/jest": "^26.0.23",
    "@types/node-forge": "^0.9.9",
    "@types/node-schedule": "^1.3.1",
    "@types/ws": "^7.4.4",
    "@types/yargs": "^17.0.0",
    "@types/zeromq": "^5.2.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "concurrently": "^6.2.0",
    "conventional-changelog": "^3.1.24",
    "conventional-changelog-cli": "^2.1.1",
    "eslint": "^7.27.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jest": "^24.3.6",
    "eslint-plugin-node": "^11.1.0",
    "ethereum-waffle": "^3.3.0",
    "get-port": "^5.1.1",
    "grpc-tools": "^1.11.1",
    "grpc_tools_node_protoc_ts": "^5.2.2",
    "hardhat": "^2.3.0",
    "hardhat-gas-reporter": "^1.0.4",
    "jest": "27.0.3",
    "ts-jest": "27.0.2",
    "ts-node": "10.0.0",
    "ts-protoc-gen": "^0.15.0",
    "typescript": "^4.3.2"
  }
}
